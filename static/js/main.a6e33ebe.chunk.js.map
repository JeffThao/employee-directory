{"version":3,"sources":["components/Section.js","components/Header.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Section","props","className","type","id","aria-describedby","placeholder","scope","employee","map","currentEmployee","src","picture","medium","alt","name","first","last","cell","email","login","md5","Header","axios","get","App","state","sortName","console","log","sort","a","b","nameA","nameB","sortEmail","emailA","toUpperCase","emailB","sortPhone","API","then","data","setState","results","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAuDeA,MArDf,SAAiBC,GACf,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,iCACE,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLD,UAAU,eACVE,GAAG,YACHC,mBAAiB,SACjBC,YAAY,aAGhB,wBAAQH,KAAK,SAASD,UAAU,kBAAhC,yBAKJ,wBAAOA,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIK,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAIF,gCACCN,EAAMO,SAASC,KAAI,SAACC,GAAD,OAClB,+BACE,oBAAIH,MAAM,MAAV,SACE,qBACEI,IAAKD,EAAgBE,QAAQC,OAC7BC,IAAKJ,EAAgBK,SAGzB,+BACGL,EAAgBK,KAAKC,MADxB,IACgCN,EAAgBK,KAAKE,QAErD,6BAAKP,EAAgBQ,OACrB,6BAAKR,EAAgBS,UAXdT,EAAgBU,MAAMC,mBCrB9BC,MAXf,WACE,OACE,qBAAKpB,UAAU,4BAAf,SACF,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,uD,iBCLW,EACG,WACd,OAAOqB,IAAMC,IAAI,iDCoENC,E,4MAlEbC,MAAQ,CACNlB,SAAS,I,EAeXmB,SAAU,WACRC,QAAQC,IAAI,EAAKH,MAAMlB,SAASsB,MAAK,SAASC,EAAGC,GAC/C,IAAIC,EAAQF,EAAEhB,KACVmB,EAAQF,EAAEjB,KACd,OAAIkB,EAAQC,GACF,EAEND,EAAQC,EACH,EAEF,O,EAKXC,UAAW,WACTP,QAAQC,IAAI,EAAKH,MAAMlB,SAASsB,MAAK,SAASC,EAAGC,GAE/C,IAAII,EAASL,EAAEZ,MAAMkB,cACjBC,EAASN,EAAEb,MAAMkB,cACrB,OAAID,EAASE,GACH,EAENF,EAASE,EACJ,EAEF,O,EAKXC,UAAW,WACTX,QAAQC,IAAI,EAAKH,MAAMlB,SAASsB,MAAK,SAAUC,EAAGC,GAChD,OAAOD,EAAEb,KAAOc,EAAEd,U,kEA7CD,IAAD,OAClBsB,IACCC,MAAK,SAAAC,GAEJ,EAAKC,SAAS,CAAEnC,SAAUkC,EAAKA,KAAKE,UACpChB,QAAQC,IAAI,CAAErB,SAAUkC,EAAKA,KAAKE,UAClC,EAAKjB,WACL,EAAKY,YACL,EAAKJ,iB,+BA2CP,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACD3B,SAAYqC,KAAKnB,MAAMlB,kB,GA5DZsC,aCOHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6e33ebe.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Section(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <form>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"SearchBar\"\n                aria-describedby=\"Search\"\n                placeholder=\"Search\"\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Phone</th>\n              <th scope=\"col\">Email</th>\n            </tr>\n          </thead>\n          \n            <tbody >\n            {props.employee.map((currentEmployee) => (\n              <tr key={currentEmployee.login.md5}>\n                <th scope=\"row\">\n                  <img\n                    src={currentEmployee.picture.medium}\n                    alt={currentEmployee.name}\n                  />\n                </th>\n                <td>\n                  {currentEmployee.name.first} {currentEmployee.name.last}\n                </td>\n                <td>{currentEmployee.cell}</td>\n                <td>{currentEmployee.email}</td>\n              </tr>\n              ))}\n            </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container\">\n    <h1 className=\"display-4\">Employee Directory</h1>\n    <p className=\"lead\">Search through your Employees here!</p>\n  </div>\n</div>\n  );\n}\n\nexport default Header;\n","import axios from \"axios\";\n\nexport default {\n  searchEmployee: function() {\n    return axios.get(\"https://randomuser.me/api/?results=10&nat=us\");\n  }\n};\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Header from \"./components/Header\";\nimport API from \"./utils/API\";\n\nclass App extends Component {\n  state = {\n    employee:[]\n  };\n\n  componentDidMount() {\n    API.searchEmployee()\n    .then(data =>\n      { \n      this.setState({ employee: data.data.results })\n      console.log({ employee: data.data.results });\n      this.sortName();\n      this.sortPhone();\n      this.sortEmail();\n    })\n  }\n\n  sortName =()  => {\n    console.log(this.state.employee.sort(function(a, b) {\n      let nameA = a.name;\n      let nameB = b.name;\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    }));\n\n  };\n\n  sortEmail =()  => {\n    console.log(this.state.employee.sort(function(a, b) {\n      // ignore upper and lowercase\n      let emailA = a.email.toUpperCase();\n      let emailB = b.email.toUpperCase();\n      if (emailA < emailB) {\n        return -1;\n      }\n      if (emailA > emailB) {\n        return 1;\n      }\n      return 0;\n    }));\n\n  };\n\n  sortPhone =()  => {\n    console.log(this.state.employee.sort(function (a, b) {\n      return a.cell - b.cell;\n    }));\n  \n  };\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Section\n       employee = {this.state.employee}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}